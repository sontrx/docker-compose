## create rootCA.key, rootCA.pem
### rootCA.key (a private key)
should be nopassw for local
```bash
openssl genrsa -des3 -out rootCA.key 2048
```
### rootCA.pem
```bash
openssl req -x509 -new -nodes -key rootCA.key -sha256 -days 1825 -out rootCA.pem
```
## import rootCA.pem to browser certificates
- chrome://settings/certificates -> Authorities -> import file -> trust all

## create https for local site
### create private key for domain
- test-ssl: `openssl genrsa -out test-ssl.local.key 2048`
### create CSR (Certificate Signing Request)
- `openssl req -new -key test-ssl.local.key -out test-ssl.local.csr`
### create config file
- `vi test-ssl.local.ext`
### create the certificate
- `openssl x509 -req -in test-ssl.local.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial \
-out test-ssl.local.crt -days 1825 -sha256 -extfile test-ssl.local.ext`

## config nginx with certs
```
server {
  listen 443 ssl;

  server_name test-ssl.local;

  ssl_certificate     /path/to/test-ssl.local.crt;
  ssl_certificate_key /path/to/test-ssl.local.key;
  ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers         HIGH:!aNULL:!MD5;

  location / {
    root /var/www/test-ssl;
    index index.html index.htm;
  }
}
```
