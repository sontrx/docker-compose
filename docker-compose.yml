version: '3.5'

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
volumes:
  mongodata:
  pgdata:

services:
  redis:
    container_name: redis
    build: ./redis
    volumes:
      - ./redis/data:/data
    command: --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend
  mysql:
    container_name: mysql
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=UTC
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend
  postgres:
    container_name: postgres
    build:
      context: ./postgres
      args:
        - POSTGRES_VERSION=${POSTGRES_VERSION}
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - backend
  mongo:
    container_name: mongodb
    build: ./mongo
    ports:
      - "${MONGODB_PORT}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - mongodata:/data/db
      - ./mongo/config:/data/configdb
    networks:
      - backend
  jenkins:
    container_name: jenkins
    image: jenkins/jenkins:latest
    privileged: true
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - ./jenkins/certs:/certs/client
      - ./jenkins/jenkins_home:/var/jenkins_home
      - ./jenkins/docker.sock:/var/run/docker.sock
    networks:
      - backend
